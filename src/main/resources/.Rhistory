if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"Predictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"Predictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (is.NaN(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"not significant"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"Predictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"Predictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"not significant"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"Predictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"Predictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"not significant"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"Predictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"Predictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"not significant"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
cat(ct)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"Predictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
ct
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"Predictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"not significant"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
cat(ct)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"Predictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"correctPredictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"not significant"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
cat(ct)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"correctPredictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"correctPredictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"not significant"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
cat(ct)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"correctPredictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"correctPredictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"NOT SIGNIFICANT"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
cat(ct)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"correctPredictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"correctPredictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"NOT SIGNIFICANT"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
cat(ct)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"correctPredictions_test.csv", sep="/"))
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
cat(eval$p.value)
cat("\n")
}
testPredictions <- read.delim(paste(datadir,"correctPredictions_test.csv", sep="/"))
testPredictions
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
ct
###Cross-validation on training
### calculate significant differences
cat("Significance\n")
for (corpus in c("EFC", "FCE")){
cat(corpus)
cat("\nCross-validation\n")
datadir<- paste("~/DissExperiments/de.tudarmstadt.ukp.experiments.lisa.spelling/src/main/resources/predictions",corpus, sep="/")
cvPredictions <- read.delim(paste(datadir,"correctPredictions_cv.csv", sep="/"))
for (first in names(cvPredictions)) {
for (second in names(cvPredictions)) {
ct <- table( cvPredictions[,c(first,second)] )
eval=mcnemar.test(ct)
p =eval$p.value
if (!is.nan(p)){
cat("difference between ")
cat(first)
cat(" and ")
cat(second)
cat(": ")
cat(eval$p.value)
significance <-"NOT SIGNIFICANT"
if (eval$p.value <=0.01){
significance <-"**"
}
else if (eval$p.value <=0.05){
significance <-"*"
}
cat(" ")
cat(significance)
cat("\n")
cat(ct)
cat("\n")
}
}
}
### Train-test setting
cat("\nTrainTest\n")
testPredictions <- read.delim(paste(datadir,"correctPredictions_test.csv", sep="/"))
testPredictions
ct <- table( testPredictions[,c("All","Length.PhonEase")] )
cat("difference between all features and length+phonease: ")
eval=mcnemar.test(ct)
cat(eval$p.value)
cat("\n")
}
library(irr)
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/AnnotationsForSemanticFit.csv", na.string="NA")
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
#Fleiss' Kappa
kappam.fleiss(results[,c(1:2)], detail=TRUE)
library(irr)
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForSemanticFit.csv", na.string="NA")
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
#Fleiss' Kappa
kappam.fleiss(results[,c(1:2)], detail=TRUE)
library(irr)
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForSemanticFit.csv", na.string="NA")
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
#Fleiss' Kappa
kappam.fleiss(results[,c(1:2)], detail=TRUE)
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForGrammaticality.csv", na.string="NA")
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
#Fleiss' Kappa
kappam.fleiss(results[,c(1:2)], detail=TRUE)
kappam.fleiss(results[,c(1:2)], detail=TRUE)
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForGrammaticality.csv", na.string="NA")
results
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
#Fleiss' Kappa
kappam.fleiss(results[,c(1:2)], detail=TRUE)
library(irr)
cat("\nSEMANTIC FIT\n")
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForSemanticFit.csv", na.string="NA")
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
#Fleiss' Kappa
kappam.fleiss(results[,c(1:2)], detail=TRUE)
cat("\nGRAMMATICALITY\n")
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForGrammaticality.csv", na.string="NA")
results
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
#Fleiss' Kappa
kappam.fleiss(results[,c(1:2)], detail=TRUE)
cat("\nSEMANTIC FIT\n")
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForSemanticFit.csv", na.string="NA")
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
cat("\nGRAMMATICALITY\n")
results = read.delim("~/DissExperiments/manipulation/distractorManipulation/results/AnnotationsForGrammaticality.csv", na.string="NA")
# inter annotator agreement
#Cohen's kappa, pairwise
kappa2(results[,c(1,2)], "squared")
